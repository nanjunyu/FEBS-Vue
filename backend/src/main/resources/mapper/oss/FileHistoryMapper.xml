<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.invs.oss.oss.dao.FileHistoryMapper">
    <resultMap id="BaseResultMap" type="com.invs.oss.oss.domain.FileHistory">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="file_name" jdbcType="VARCHAR" property="fileName"/>
        <result column="mime_type" jdbcType="VARCHAR" property="mimeType"/>
        <result column="suffix" jdbcType="VARCHAR" property="suffix"/>
        <result column="file_size" jdbcType="DECIMAL" property="fileSize"/>
        <result column="status" jdbcType="CHAR" property="status"/>
        <result column="fast_path" jdbcType="VARCHAR" property="fastPath"/>
        <result column="file_id" jdbcType="VARCHAR" property="fileId"/>
        <result column="version_number" jdbcType="DECIMAL" property="versionNumber"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="pv" jdbcType="INTEGER" property="pv"/>
        <result column="md5" jdbcType="VARCHAR" property="md5"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, user_id, create_time, update_time, file_name, mime_type, suffix, file_size, status,
    fast_path, file_id, version_number, author, pv, md5
  </sql>

    <select id="findSysInfoPage" resultMap="BaseResultMap" parameterType="java.util.Map">
        select
        <include refid="Base_Column_List"/>
        from t_file_history where parent_id is null
        <if test="userId != null and userId != ''">
            and user_id=#{userId}
        </if>
        order by create_time desc
        limit #{pageStart} , #{pageSize}
    </select>

    <select id="findSysInfoCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1) from t_file_history where parent_id is null
        <if test="userId != null and userId != ''">
            and user_id=#{userId}
        </if>
    </select>


    <select id="getMaxVersion" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_file_history where parent_id =#{parentId}
        order by version_number desc limit 1
    </select>


    <select id="sumPvByParentId" resultType="java.lang.Integer" parameterType="java.lang.Long">
        select sum(t.pv)
        from t_file_history t where parent_id =#{parentId}
    </select>


    <select id="sysFileInfo" resultType="java.util.Map" parameterType="java.lang.Long">
        select count(*) as totalNum,sum(s.file_size) as totalSize from (
        select t.user_id,t.id,t.file_id,t.file_size from t_file_history t
        where t.user_id=#{userId} group by t.file_id) s
    </select>


    <select id="filePvInfo" resultMap="BaseResultMap" parameterType="java.util.Map">
        select   <include refid="Base_Column_List"/>
        from t_file_history t
        where t.user_id=#{userId}
        and t.create_time between #{startTime} and #{endTime}
        <if test="fileName != null and fileName != ''">
            and t.file_name like CONCAT(CONCAT('%', #{fileName}),'%')
        </if>
        GROUP BY t.file_id
    </select>
</mapper>
